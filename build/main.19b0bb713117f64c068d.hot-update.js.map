{"version":3,"file":"main.19b0bb713117f64c068d.hot-update.js","sources":["webpack:///./src/pages/SignIn/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport logo from \"../../assets/images/2gather.jpg\";\nimport AuthController from \"../../platform/api/auth\";\nimport \"./style.scss\";\n\nconst SignIn = () => {\n  const [fields, setFields] = useState({ email: \"\", password: \"\" });\n  const [focus, setFocus] = useState({ email: false, password: false });\n  const [passToggle, setPassToggle] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  const validateEmail = email => {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  };\n\n  const change = ({ target: { name, value } }) =>\n    setFields(prevState => ({ ...prevState, [name]: value }));\n\n  const send = e => {\n    e.preventDefault();\n    console.log(\"sent\");\n    // if (!submitted) setSubmitted(!submitted);\n    // else this.checkForSend();\n  };\n\n  useEffect(async () => {\n    const response = await fetch(\"https://2.evollai.com/api/auth/login\");\n    console.log(response);\n  }, []);\n\n  //   checkForSend = () => {\n  //     const { form } = this.state;\n\n  //     if (form.firstName && form.lastName &&\n  //       isValidEmail(form.email) &&\n  //       form.subject && form.message) this.setState({ submitLoading: true }, async () => {\n  //       const result = await ContactController.Send(form);\n  //       if (result.Success) {\n  //         NotificationManager.success('Message successfully sent');\n  //         window.routerHistory.push(ROUTES.HOME);\n  //       } else NotificationManager.error('Failed to send the message');\n  //       this.setState({ submitLoading: false });\n  //     });\n  //   }\n\n  const togglePassword = () => setPassToggle(!passToggle);\n\n  const focusHandler = key =>\n    setFocus(prevState => ({\n      ...prevState,\n      [key]: !prevState[key]\n    }));\n\n  const blurHandler = key =>\n    setFocus(prevState => ({\n      ...prevState,\n      [key]: !prevState[key]\n    }));\n\n  return (\n    <div className=\"sign-in\">\n      <div className=\"sign-in-form\">\n        <div className=\"sign-in-form-container\">\n          <h2>Sign in</h2>\n          <p>\n            Enter your email and password and login in your <br /> account\n          </p>\n          <form>\n            <div className=\"G-field\">\n              <label\n                className={`G-form-label  ${\n                  focus.email ? \"G-label-animated\" : \"\"\n                }`}\n                htmlFor=\"signin-email\"\n              >\n                Email\n              </label>\n              <input\n                type=\"email\"\n                onFocus={() => focusHandler(\"email\")}\n                onBlur={() => blurHandler(\"email\")}\n              />\n\n              <span\n                className={`input-border ${\n                  focus.email ? \"input-border-animated\" : \"\"\n                }`}\n              ></span>\n            </div>\n            <div className=\"G-field\">\n              <label\n                className={`G-form-label  ${\n                  focus.password ? \"G-label-animated\" : \"\"\n                }`}\n                htmlFor=\"signin-password\"\n              >\n                Password\n              </label>\n              <input\n                type={!passToggle ? \"password\" : \"text\"}\n                onFocus={() => focusHandler(\"password\")}\n                onBlur={() => blurHandler(\"password\")}\n              />\n\n              <span\n                className={`input-border ${\n                  focus.password ? \"input-border-animated\" : \"\"\n                }`}\n              ></span>\n              <i\n                className={!passToggle ? \"icon-ic_eye\" : \"icon-ic_eyeclosed\"}\n                onClick={togglePassword}\n              ></i>\n            </div>\n\n            <button className=\"G-button\" onClick={this.send}>\n              Sign in\n            </button>\n          </form>\n        </div>\n      </div>\n      <div className=\"logo\">\n        <img src={logo} alt=\"2gather\" />\n      </div>\n    </div>\n  );\n};\n\nexport default SignIn;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AADA;AACA;AAKA;AAAA;AACA;AAAA;AADA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAJA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAOA;AADA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAJA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAOA;AADA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}