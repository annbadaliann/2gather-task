{"version":3,"file":"main.61f138c2e4e82aedc349.hot-update.js","sources":["webpack:///./src/pages/TopicSuggestion/tabs/Media.jsx"],"sourcesContent":["import React from \"react\";\nimport gallery from \"../../../assets/images/preview1.png\";\nimport addIcon from \"../../../assets/images/add.png\";\nimport axios from \"axios\";\n\nclass Media extends React.Component {\n  state = {\n    // selectedFile: null,\n    // file: \"\",\n    // imagePreviewUrl: \"\",\n    uploading: false,\n    images: []\n  };\n\n  // selectFileHandler = e => {\n  //   console.log(\"hello world\");\n  //   this.setState({\n  //     selectedFile: e.target.files[0]\n  //   });\n  // };\n\n  // uploadFileHandler = () => {\n  //   const fd = new FormData();\n  //   fd.append(\"image\", this.state.selectedFile, this.state.selectedFile.name);\n  //   axios.post(\"https://2.evollai.com/api/topic\", fd).then(res => {\n  //     console.log(res);\n  //   });\n  // };\n\n  // _handleSubmit(e) {\n  //   e.preventDefault();\n  //   // TODO: do something with -> this.state.file\n  //   console.log(\"handle uploading-\", this.state.file);\n  // }\n\n  // _handleImageChange(e) {\n  //   e.preventDefault();\n\n  //   let reader = new FileReader();\n  //   let file = e.target.files[0];\n\n  //   reader.onloadend = () => {\n  //     this.setState({\n  //       file: file,\n  //       imagePreviewUrl: reader.result\n  //     });\n  //   };\n\n  //   reader.readAsDataURL(file);\n  // }\n\n  onChange = e => {\n    const files = Array.from(e.target.files);\n    this.setState({\n      uploading: true\n    });\n\n    const formData = new FormData();\n\n    files.forEach((file, i) => {\n      formData.append(i, file);\n    });\n\n    fetch(`${url} `, {\n      method: \"POST\",\n      body: formData\n    });\n\n    then(res => res.json()).then(images => {\n      this.setState({\n        uploading: false,\n        images\n      });\n    });\n  };\n\n  render() {\n    // let { imagePreviewUrl } = this.state;\n    // let $imagePreview = null;\n    // if (imagePreviewUrl) {\n    //   $imagePreview = <img src={imagePreviewUrl} />;\n    // } else {\n    //   $imagePreview = (\n    //     <div className=\"previewText\">Please select an Image for Preview</div>\n    //   );\n    // }\n\n    return (\n      <div className=\"media\">\n        <h2 className=\"title\">Media</h2>\n        <p className=\"paragraph\">\n          Choose images for the overview section of your topic.\n        </p>\n        {/* <div className=\"gallery-list\">\n          <div className=\"gallery upload\">\n            <div>\n              <img src={addIcon} alt=\"add\" onClick={this.uploadFileHandler} />\n              <input type=\"file\" onChange={this.selectFileHandler} />\n            </div>\n          </div>\n          <div className=\"gallery\">\n            <img src={gallery} alt=\"gallery\" />\n          </div>\n          <div className=\"gallery\">\n            <img src={gallery} alt=\"gallery\" />\n          </div>\n          <div className=\"gallery\">\n            <img src={gallery} alt=\"gallery\" />\n          </div>\n        </div> */}\n        <div className=\"previewComponent\">\n          <form onSubmit={e => this._handleSubmit(e)}>\n            <input\n              className=\"fileInput\"\n              type=\"file\"\n              onChange={e => this._handleImageChange(e)}\n            />\n            <button\n              className=\"submitButton\"\n              type=\"submit\"\n              onClick={e => this._handleSubmit(e)}\n            >\n              Upload Image\n            </button>\n          </form>\n          <div className=\"imgPreview\">{$imagePreview}</div>\n        </div>\n        <button className=\"G-button\" onClick={this.props.moveNextPage}>\n          Continue\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Media;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AA4CA;AACA;AACA;AAAA;AACA;AADA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA/HA;AACA;AAiIA;;;;A","sourceRoot":""}