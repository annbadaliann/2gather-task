{"version":3,"file":"main.69a595d23b5493577aa2.hot-update.js","sources":["webpack:///./src/pages/SignIn/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport logo from \"../../assets/images/2gather.jpg\";\nimport AuthController from \"../../platform/api/auth\";\nimport {\n  isValidEmail,\n  isValidPassword\n} from \"../../platform/services/validator\";\nimport {\n  OsTypeEnum,\n  LoginProviderTypeEnum\n} from \"../../platform/constants/enums\";\nimport \"./style.scss\";\n\nclass SignIn extends React.Component {\n  state = {\n    form: {\n      email: \"\",\n      password: \"\"\n    },\n    focus: {\n      email: false,\n      password: false\n    },\n    passToggle: false\n  };\n\n  //   focusHandler = key => {\n  //     this.setState(prevState => ({\n  //       ...prevState,\n  //       focus: {\n  //         [key]: !prevState.focus[key]\n  //       }\n  //     }));\n  //   };\n\n  //   blurHandler = key => {\n  //     if (this.state.form[key]) {\n  //       console.log(\"123123\");\n  //       this.setState(prevState => ({\n  //         ...prevState,\n  //         focus: {\n  //           [key]: !prevState.focus[key]\n  //         }\n  //       }));\n  //     }\n  //   };\n\n  submit = async e => {\n    e.preventDefault();\n    console.log(this.state.form);\n    const {\n      form: { email, password }\n    } = this.state;\n    if (email && password) {\n      console.log(\"SBUMITTED\");\n      try {\n        const res = await fetch(\"https://2.evollai.com/api/auth/login\", {\n          method: \"POST\",\n          body: JSON.stringify({ email, password, osType: 3 })\n        });\n        console.log(res);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  change = ({ target: { name, value } }) => {\n    console.log(name, value);\n    const { form } = this.state;\n    form[name] = value;\n    console.log(form);\n    this.setState({ form });\n  };\n\n  onFocus = key => {\n    this.setState({\n      focus: {\n        [key]: true\n      }\n    });\n  };\n\n  onBlur = (e, key) => {\n    this.setState({\n      focus: {\n        [key]: e.target.value !== \"\"\n      }\n    });\n  };\n\n  togglePassword = () => {\n    this.setState({\n      passToggle: !this.state.passToggle\n    });\n  };\n\n  render() {\n    const { form, focus, passToggle, isFocused } = this.state;\n    return (\n      <div className=\"sign-in\">\n        <div className=\"sign-in-form\">\n          <div className=\"sign-in-form-container\">\n            <h2>Sign in</h2>\n            <p>\n              Enter your email and password and login in your <br /> account\n            </p>\n            <form>\n              <div className=\"G-field\">\n                <label\n                  className={`G-form-label  ${\n                    focus.email ? \"G-label-animated\" : \"\"\n                  }`}\n                  htmlFor=\"signin-email\"\n                >\n                  Email\n                </label>\n                <input\n                  type=\"email\"\n                  onChange={this.change}\n                  name=\"email\"\n                  onFocus={() => this.onFocus(\"email\")}\n                  onBlur={e => this.onBlur(event, \"email\")}\n                />\n\n                <span\n                  className={`input-border ${\n                    focus.email ? \"input-border-animated\" : \"\"\n                  }`}\n                ></span>\n              </div>\n              <div className=\"G-field\">\n                <label\n                  className={`G-form-label  ${\n                    focus.password ? \"G-label-animated\" : \"\"\n                  }`}\n                  htmlFor=\"signin-password\"\n                >\n                  Password\n                </label>\n                <input\n                  name=\"password\"\n                  type={!passToggle ? \"password\" : \"text\"}\n                  onChange={this.change}\n                  onFocus={() => this.onFocus(\"password\")}\n                  onBlur={() => this.onBlur(event, \"password\")}\n                />\n\n                <span\n                  className={`input-border ${\n                    focus.password ? \"input-border-animated\" : \"\"\n                  }`}\n                ></span>\n                <i\n                  className={!passToggle ? \"icon-ic_eye\" : \"icon-ic_eyeclosed\"}\n                  onClick={this.togglePassword}\n                ></i>\n              </div>\n\n              <button className=\"G-button\" onClick={this.submit}>\n                Sign in\n              </button>\n            </form>\n          </div>\n        </div>\n        <div className=\"logo\">\n          <img src={logo} alt=\"2gather\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SignIn;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAIA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AATA;AACA;;;;;;AAgCA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAMA;AAPA;AAAA;AAAA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAVA;AASA;AAIA;AAbA;AAAA;AACA;AADA;AAAA;AAAA;AAeA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAmBA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAKA;AACA;AACA;AACA;AACA;AADA;AAKA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAJA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AASA;AADA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAJA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AASA;AADA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA7JA;AACA;AA+JA;;;;A","sourceRoot":""}