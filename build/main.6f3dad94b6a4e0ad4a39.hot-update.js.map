{"version":3,"file":"main.6f3dad94b6a4e0ad4a39.hot-update.js","sources":["webpack:///./src/pages/TopicSuggestion/tabs/LocationAndCategory.jsx"],"sourcesContent":["import React from \"react\";\nimport Autocomplete from \"react-google-autocomplete\";\nimport GoogleMapReact from \"google-map-react\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport location from \"../../../assets/images/location.png\";\nimport \"primereact/resources/themes/nova-light/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\n\nclass LocationAndCategory extends React.Component {\n  state = {\n    city: null,\n    lat: 40.1872023,\n    lng: 44.55820900000003\n  };\n\n  onContinue = () => {\n    this.props.moveNextPage();\n  };\n\n  icon = {\n    url: location, // url\n    scaledSize: new google.maps.Size(30, 40), // scaled size\n    origin: new google.maps.Point(0, 0), // origin\n    anchor: new google.maps.Point(0, 0) // anchor\n  };\n\n  renderMarkers(map, maps) {\n    let marker = new maps.Marker({\n      position: { lat: this.state.lat, lng: this.state.lng },\n      map,\n      icon: this.icon\n    });\n  }\n\n  placeSelectHandler = place => {\n    this.setState({\n      lat: place.geometry.location.lat(),\n      lng: place.geometry.location.lng()\n    });\n\n    this.props.getLatLng(this.state.lat, this.state.lng);\n  };\n\n  render() {\n    const { form, error } = this.state;\n    const {\n      onChange,\n      categories,\n      address,\n      submitted,\n      categoryId,\n      onCategoryChange\n    } = this.props;\n    return (\n      <div className=\"location-category\">\n        <h2 className=\"title\">Location and category</h2>\n        <p className=\"paragraph\">\n          Please select your project category and choose location of your\n          <br />\n          proposed project\n        </p>\n        <div className=\"tab-label\">\n          <label>\n            <span>Category</span>\n            <Dropdown\n              optionLabel=\"name\"\n              value={categoryId}\n              options={categories}\n              onChange={onCategoryChange}\n              placeholder=\"Choose category\"\n              className={submitted && !categoryId ? \"G-invalid-input\" : \"\"}\n            />\n          </label>\n        </div>\n        <div className=\"tab-label\">\n          <label>\n            <span>Location</span>\n          </label>\n          <Autocomplete\n            style={{ width: \"100%\" }}\n            onPlaceSelected={this.placeSelectHandler}\n            types={[\"establishment\", \"geocode\"]}\n            placeholder=\"Choose location\"\n            className={submitted && !address ? \"G-invalid-input\" : \"\"}\n          />\n          <div\n            style={{\n              height: \"450px\",\n              width: \"100%\",\n              marginTop: \"30px\",\n              filter: \"grayScale(60%)\"\n            }}\n          >\n            <GoogleMapReact\n              bootstrapURLKeys={{\n                key: \"AIzaSyBpKF69rgtgYwZWCPeqYhdmD-ARYWMBdQE\"\n              }}\n              center={{\n                lat: this.state.lat,\n                lng: this.state.lng\n              }}\n              defaultZoom={16}\n              options={{\n                styles: exampleMapStyles\n              }}\n              yesIWantToUseGoogleMapApiInternals\n              onGoogleApiLoaded={({ map, maps }) =>\n                this.renderMarkers(map, maps)\n              }\n            />\n          </div>\n        </div>\n        <div className=\"map\" />\n        <button className=\"G-button\" onClick={this.onContinue}>\n          Continue\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default LocationAndCategory;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AALA;AACA;AAcA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;;;;;;AAhbA;AAAA;AAAA;AAAA;AAAA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA9GA;AACA;AAgHA;;;;A","sourceRoot":""}