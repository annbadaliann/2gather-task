{"version":3,"file":"main.8a7a8528e71b392a4071.hot-update.js","sources":["webpack:///./src/components/select/index.js","webpack:///./src/pages/TopicSuggestion/tabs/LocationAndCategory.jsx","webpack:///external \"google-map-react\"","webpack:///external \"react-google-autocomplete\""],"sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ClickOutside from '../click-outside';\r\n\r\nimport './style.scss';\r\n\r\nclass Select extends PureComponent {\r\n\r\n  state = {\r\n    isOpen: false,\r\n    value: null,\r\n  };\r\n\r\n  static propTypes = {\r\n    placeholderOpacity: PropTypes.bool,\r\n    withoutChange: PropTypes.bool,\r\n    placeholder: PropTypes.string,\r\n    onNewClick: PropTypes.func,\r\n    className: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    withNew: PropTypes.bool,\r\n    defaultValue: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ]),\r\n    options: PropTypes.arrayOf(PropTypes.shape({\r\n      name: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n        PropTypes.element,\r\n      ]),\r\n      value: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n      ]),\r\n    })),\r\n  };\r\n\r\n  static defaultProps = {\r\n    placeholder: 'Choose',\r\n    className: '',\r\n    onChange: null,\r\n    onNewClick: null,\r\n    withNew: false,\r\n    withoutChange: false,\r\n    options: [],\r\n  };\r\n\r\n  static getDerivedStateFromProps(nextProps, { value }) {\r\n    if (nextProps.defaultValue && nextProps.options && !value) {\r\n      let value = null;\r\n      nextProps.options.map(item => {\r\n        if (!value && item.value === nextProps.defaultValue) value = item;\r\n        return true;\r\n      });\r\n      return value ? { value } : null;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  toggleState = isOpen => this.setState({ isOpen });\r\n\r\n  chooseItem = item => {\r\n    const { onChange, withoutChange } = this.props;\r\n    if (item.value === '//cr') {\r\n      this.setState({ value: null, isOpen: false });\r\n      onChange && onChange(null);\r\n    } else {\r\n      this.setState({ value: !withoutChange ? item : null, isOpen: false });\r\n      onChange && onChange(item);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      placeholderOpacity,\r\n      withoutChange,\r\n      placeholder,\r\n      onNewClick,\r\n      className,\r\n      options,\r\n      useValue,\r\n      withNew,\r\n    } = this.props;\r\n    const { isOpen } = this.state;\r\n    const value = useValue ? options.find(item => item.value === this.props.value) : this.state.value;\r\n\r\n    return (\r\n      <ClickOutside className={className} onClickOutside={() => this.toggleState(false)}>\r\n        <div className={`M-select ${isOpen ? 'M-select-open' : ''}`}>\r\n          <div className=\"M-select-header\" onClick={() => this.toggleState(!isOpen)}>\r\n            <span className={!value && placeholderOpacity ? 'M-select-placeholder' : ''}>{value && !withoutChange ? value.name : placeholder}</span>\r\n            <i className={isOpen ? 'icon-arrow_top' : 'icon-arrow_down'} />\r\n          </div>\r\n          {isOpen && <ul className=\"M-select-body\">\r\n            {options.map(item => (value ? value.value !== item.value : item.value !== '//cr') && <li key={item.value} onClick={() => this.chooseItem(item)}>{item.name}</li>)}\r\n            {withNew && <li className=\"M-select-new-label\" onClick={onNewClick}>New</li>}\r\n          </ul>}\r\n        </div>\r\n      </ClickOutside>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Select;\r\n","import React from \"react\";\nimport Select from \"../../../components/select\";\nimport Autocomplete from \"react-google-autocomplete\";\nimport GoogleMapReact from \"google-map-react\";\n\nclass LocationAndCategory extends React.Component {\n  state = {\n    map: {\n      lat: 59.95,\n      lng: 30.33\n    },\n    error: false,\n    page: 1\n  };\n\n  genderOptions = [\n    {\n      name: \"Male\",\n      value: \"M\"\n    },\n    {\n      name: \"Female\",\n      value: \"F\"\n    }\n  ];\n\n  changeGender = category => {\n    // categoryn evetna ?\n    const { form } = this.state;\n    form.category = category.value;\n    // this.setState({ form });\n    this.props.onCategoryChange(category.value);\n  };\n\n  onContinue = () => {\n    this.props.moveNextPage();\n  };\n\n  isValid = () => {\n    return this.props.location && this.props.category ? false : true;\n  };\n\n  placeSelectHandler = place => {\n    console.log(place, \"place\");\n  };\n  render() {\n    const { form, error } = this.state;\n    const {\n      onChange,\n      category,\n      categories,\n      location,\n      inputWarning\n    } = this.props;\n    console.log(categories, \"categories\");\n    return (\n      <div className=\"location-category\">\n        <h2 className=\"title\">Location and category</h2>\n        <p className=\"paragraph\">\n          Please select your project category and choose location of your\n          proposed project\n        </p>\n        <div className=\"tab-label\">\n          <label>\n            <span>Category</span>\n            {/* <Select\n              useValue\n              placeholder=\"Choose category\"\n              options={this.genderOptions}\n              onChange={this.changeGender}\n              value={category}\n            /> */}\n          </label>\n        </div>\n        <div className=\"tab-label\">\n          <label>\n            <span>Location</span>\n            <input\n              type=\"text\"\n              placeholder=\"Choose location\"\n              name=\"location\"\n              value={location}\n              onChange={onChange}\n              className={inputWarning ? \"G-invalid-input\" : \" \"}\n            />\n          </label>\n          <Autocomplete\n            style={{ width: \"100%\" }}\n            onPlaceSelected={this.placeSelectHandler}\n            types={[\"establishment\", \"geocode\"]}\n          />\n        </div>\n        <div className=\"map\">\n          {/* <div style={{ height: '100vh', width: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: ''}}\n          center={{\n            lat: this.state.lat,\n            lng: this.state.lng\n          }}\n          defaultZoom={16}\n        />\n         \n      </div> */}\n        </div>\n        <button className=\"G-button\" onClick={this.onContinue}>\n          Continue\n        </button>\n      </div>\n    );\n  }\n}\n// voice ara chjoga ))ok nayi es continuei vra seghmi piti teghapoxvi myus ej\nexport default LocationAndCategory;\n","module.exports = require(\"google-map-react\");","module.exports = require(\"react-google-autocomplete\");"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAFA;AACA;AAoDA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;AAtDA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;AArDA;AACA;AADA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAKA;AANA;AAZA;AACA;AARA;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAkEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AANA;AACA;AAQA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AACA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAzGA;AACA;AACA;AA0GA;;;;;;;;;;;ACjHA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}