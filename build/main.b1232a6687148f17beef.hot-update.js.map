{"version":3,"file":"main.b1232a6687148f17beef.hot-update.js","sources":["webpack:///./src/components/click-outside/index.js","webpack:///./src/components/select/index.js","webpack:///./src/pages/TopicSuggestion/tabs/LocationAndCategory.jsx","webpack:///external \"@babel/runtime/helpers/objectWithoutProperties\"","webpack:///external \"google-map-react\"","webpack:///external \"prop-types\"","webpack:///external \"react-google-autocomplete\""],"sourcesContent":["import * as React     from 'react';\r\nimport * as PropTypes from 'prop-types';\r\n\r\nexport default class ClickOutside extends React.Component {\r\n\r\n  static propTypes = {\r\n    onClickOutside: PropTypes.func.isRequired\r\n  };\r\n\r\n  container;\r\n\r\n  getContainer = (ref) => {\r\n    this.container = ref;\r\n  }\r\n\r\n  handle = (e) => {\r\n    const { onClickOutside } = this.props;\r\n    const CONTAINER = this.container;\r\n    if (!CONTAINER.contains(e.target)) { onClickOutside(e); }\r\n  }\r\n\r\n  render() {\r\n    \r\n    const { children, onClickOutside, ...props } = this.props;\r\n    return <div className=\"S-click-outside\" {...props} ref={this.getContainer}>{children}</div>;\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('click', this.handle, true);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('click', this.handle, true);\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ClickOutside from \"../click-outside\";\r\n\r\nimport \"./style.scss\";\r\n\r\nclass Select extends PureComponent {\r\n  state = {\r\n    isOpen: false,\r\n    value: null\r\n  };\r\n\r\n  static propTypes = {\r\n    placeholderOpacity: PropTypes.bool,\r\n    withoutChange: PropTypes.bool,\r\n    placeholder: PropTypes.string,\r\n    onNewClick: PropTypes.func,\r\n    className: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    withNew: PropTypes.bool,\r\n    defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    options: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        name: PropTypes.oneOfType([\r\n          PropTypes.string,\r\n          PropTypes.number,\r\n          PropTypes.element\r\n        ]),\r\n        value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n      })\r\n    )\r\n  };\r\n\r\n  static defaultProps = {\r\n    placeholder: \"Choose\",\r\n    className: \"\",\r\n    onChange: null,\r\n    onNewClick: null,\r\n    withNew: false,\r\n    withoutChange: false,\r\n    options: []\r\n  };\r\n\r\n  static getDerivedStateFromProps(nextProps, { value }) {\r\n    if (nextProps.defaultValue && nextProps.options && !value) {\r\n      let value = null;\r\n      nextProps.options.map(item => {\r\n        if (!value && item.value === nextProps.defaultValue) value = item;\r\n        return true;\r\n      });\r\n      return value ? { value } : null;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  toggleState = isOpen => this.setState({ isOpen });\r\n\r\n  chooseItem = item => {\r\n    const { onChange, withoutChange } = this.props;\r\n    if (item.value === \"//cr\") {\r\n      this.setState({ value: null, isOpen: false });\r\n      onChange && onChange(null);\r\n    } else {\r\n      this.setState({ value: !withoutChange ? item : null, isOpen: false });\r\n      onChange && onChange(item);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      placeholderOpacity,\r\n      withoutChange,\r\n      placeholder,\r\n      onNewClick,\r\n      className,\r\n      options,\r\n      useValue,\r\n      withNew\r\n    } = this.props;\r\n    const { isOpen } = this.state;\r\n    const value = useValue\r\n      ? options.find(item => item.name === this.props.value)\r\n      : this.state.value;\r\n\r\n    return (\r\n      <ClickOutside\r\n        className={className}\r\n        onClickOutside={() => this.toggleState(false)}\r\n      >\r\n        <div className={`M-select ${isOpen ? \"M-select-open\" : \"\"}`}>\r\n          <div\r\n            className=\"M-select-header\"\r\n            onClick={() => this.toggleState(!isOpen)}\r\n          >\r\n            <span\r\n              className={\r\n                !value && placeholderOpacity ? \"M-select-placeholder\" : \"\"\r\n              }\r\n            >\r\n              {value && !withoutChange ? value.name : placeholder}\r\n            </span>\r\n            <i className={isOpen ? \"icon-arrow_top\" : \"icon-arrow_down\"} />\r\n          </div>\r\n          {isOpen && (\r\n            <ul className=\"M-select-body\">\r\n              {options.map(\r\n                item =>\r\n                  (value\r\n                    ? value.value !== item.value\r\n                    : item.value !== \"//cr\") && (\r\n                    <li key={item.value} onClick={() => this.chooseItem(item)}>\r\n                      {item.name}\r\n                    </li>\r\n                  )\r\n              )}\r\n              {withNew && (\r\n                <li className=\"M-select-new-label\" onClick={onNewClick}>\r\n                  New\r\n                </li>\r\n              )}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </ClickOutside>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Select;\r\n","import React from \"react\";\nimport Select from \"../../../components/select\";\nimport Autocomplete from \"react-google-autocomplete\";\nimport GoogleMapReact from \"google-map-react\";\nclass LocationAndCategory extends React.Component {\n  state = {\n    map: {\n      lat: 59.95,\n      lng: 30.33\n    },\n    error: false,\n    page: 1\n  };\n\n  changeGender = category => {\n    const { form } = this.state;\n    form.category = category.value;\n    // this.setState({ form });\n    this.props.onCategoryChange(category.value);\n  };\n\n  onContinue = () => {\n    this.props.moveNextPage();\n  };\n\n  placeSelectHandler = place => {\n    console.log(place, \"place\");\n  };\n\n  render() {\n    console.log(category, \"category\");\n    const { form, error } = this.state;\n    const { onChange, category, categories, location, submitted } = this.props;\n    console.log(categories, \"categories from props\");\n    return (\n      <div className=\"location-category\">\n        <h2 className=\"title\">Location and category</h2>\n        <p className=\"paragraph\">\n          Please select your project category and choose location of your\n          proposed project\n        </p>\n        <div className=\"tab-label\">\n          <label>\n            <span>Category</span>\n            <Select\n              useValue\n              placeholder=\"Choose category\"\n              options={categories}\n              // onChange={this.changeGender}\n              value={category}\n            />\n          </label>\n        </div>\n        <div className=\"tab-label\">\n          <label>\n            <span>Location</span>\n            <input\n              type=\"text\"\n              placeholder=\"Choose location\"\n              name=\"location\"\n              value={location}\n              onChange={onChange}\n              className={submitted && !location ? \"G-invalid-input\" : \" \"}\n            />\n          </label>\n          <Autocomplete\n            style={{ width: \"100%\" }}\n            onPlaceSelected={this.placeSelectHandler}\n            types={[\"establishment\", \"geocode\"]}\n          />\n        </div>\n        <div className=\"map\"></div>\n        <button className=\"G-button\" onClick={this.onContinue}>\n          Continue\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default LocationAndCategory;\n","module.exports = require(\"@babel/runtime/helpers/objectWithoutProperties\");","module.exports = require(\"google-map-react\");","module.exports = require(\"prop-types\");","module.exports = require(\"react-google-autocomplete\");"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;;AA9BA;AACA;AADA;AAGA;AADA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAgnFA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;AAhDA;AACA;AADA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AANA;AAVA;AACA;AAPA;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AA+FA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClIA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AANA;AACA;AAQA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AALA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAzEA;AACA;AA2EA;;;;;;;;;;;AChFA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}