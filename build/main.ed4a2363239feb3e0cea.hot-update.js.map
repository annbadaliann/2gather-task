{"version":3,"file":"main.ed4a2363239feb3e0cea.hot-update.js","sources":["webpack:///./src/pages/TopicSuggestion/tabs/Media.jsx"],"sourcesContent":["import React from \"react\";\nimport deleteIcon from \"../../../assets/images/delete.png\";\nimport addIcon from \"../../../assets/images/add.png\";\nimport SimpleSlider from \"./components/Slider\";\n\nclass Media extends React.Component {\n  state = {\n    uploading: false,\n    imagesToPreview: [],\n    imagesToUpload: []\n  };\n\n  selectFileHandler = e => {\n    this.state.imagesToPreview.push({\n      url: window.URL.createObjectURL(e.target.files[0])\n    });\n\n    this.state.imagesToUpload.push({\n      url: e.target.files[0]\n    });\n\n    this.setState({\n      imagesToPreview: this.state.imagesToPreview,\n      imagesToUpload: this.state.imagesToUpload\n    });\n    this.props.sendData(this.state.imagesToPreview);\n  };\n\n  openSlider = () => {\n    console.log(\"open slider\");\n  };\n  // _handleSubmit(e) {\n  //   e.preventDefault();\n  //   // TODO: do something with -> this.state.file\n  //   console.log(\"handle uploading-\", this.state.file);\n  // }\n\n  // _handleImageChange(e) {\n  //   e.preventDefault();\n\n  //   let reader = new FileReader();\n  //   let file = e.target.files[0];\n\n  //   reader.onloadend = () => {\n  //     this.setState({\n  //       file: file,\n  //       imagePreviewUrl: reader.result\n  //     });\n  //   };\n\n  //   reader.readAsDataURL(file);\n  // }\n\n  onChange = e => {\n    const files = Array.from(e.target.files);\n    this.setState({\n      uploading: true\n    });\n\n    const formData = new FormData();\n\n    // files.forEach((file, i) => {\n    //   formData.append(i, file);\n    // });\n\n    // fetch(`${url} `, {\n    //   method: \"POST\",\n    //   body: formData\n    // })\n    //   .then(res => res.json())\n    //   .then(images => {\n    //     this.setState({\n    //       uploading: false,\n    //       images\n    //     });\n    //   });\n  };\n\n  deleteImage = index => {\n    this.state.imagesToPreview.splice(index, 1);\n    console.log(1);\n    this.setState({\n      imagesToPreview: this.state.imagesToPreview\n      // imagesToUpload: this.state.imagesToUpload\n    });\n\n    this.props.sendData(this.state.imagesToPreview);\n  };\n\n  render() {\n    // let { imagePreviewUrl } = this.state;\n    // let $imagePreview = null;\n    // if (imagePreviewUrl) {\n    //   $imagePreview = <img src={imagePreviewUrl} />;\n    // } else {\n    //   $imagePreview = (\n    //     <div className=\"previewText\">Please select an Image for Preview</div>\n    //   );\n    // }\n\n    const { uploading, images } = this.state;\n\n    const content = () => {\n      switch (true) {\n        case images.length > 0:\n          return <Images images={images} removeImage={this.removeImage} />;\n        default:\n          return <Buttons onChange={this.onChange} />;\n      }\n    };\n    return (\n      <div className=\"media\">\n        <h2 className=\"title\">Media</h2>\n        <p className=\"paragraph\">\n          Choose images for the overview section of your topic.\n        </p>\n        <div className=\"gallery-list\">\n          <div className=\"gallery upload\">\n            <div>\n              <input\n                type=\"file\"\n                onChange={this.selectFileHandler}\n                id=\"file-upload\"\n                style={{ display: \"none\" }}\n                accept=\"image/png, image/jpeg\"\n              />\n\n              <label htmlFor=\"file-upload\">\n                <img src={addIcon} alt=\"add\" onClick={this.uploadFileHandler} />\n              </label>\n            </div>\n          </div>\n\n          {this.state.imagesToPreview.map((item, index) => {\n            return (\n              <div\n                key={index}\n                className=\"gallery\"\n                style={{\n                  background: `url(${\n                    item ? item.url : null\n                  }) center/cover no-repeat`\n                }}\n                // onClick={this.openSlider}\n              >\n                <img\n                  src={deleteIcon}\n                  alt=\"delete\"\n                  className=\"delete-img\"\n                  onClick={() => this.deleteImage(index)}\n                />\n              </div>\n            );\n          })}\n        </div>\n\n        <button className=\"G-button\" onClick={this.props.moveNextPage}>\n          Continue\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Media;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AADA;AACA;AAGA;AACA;AADA;AACA;AAGA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAsBA;AACA;AACA;AAAA;AACA;AADA;AACA;AAGA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AACA;AAYA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AACA;AACA;AACA;AADA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAQA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA5JA;AACA;AA8JA;;;;A","sourceRoot":""}